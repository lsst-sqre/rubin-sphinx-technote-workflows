name: CI

'on':
  workflow_call:
    inputs:
      handle:
        description: 'The document handle (lower-case subdomain).'
        required: true
        type: string
      build_command:
        description: 'Shell command(s) to build the technote.'
        default: 'make html'
        required: false
        type: string
      upload:
        description: 'Flag to enable uploads'
        default: true
        required: false
        type: boolean
      apt_packages:
        description: 'Space-delimited list of apt-get packages to install before build (e.g. graphviz)'
        default: ''
        required: false
        type: string
    secrets:
      ltd_username:
        description: 'LTD username'
        required: true
      ltd_password:
        description: 'LTD password'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for metadata
          submodules: true

      - name: Install apt packages
        if: ${{ inputs.apt_packages}}
        run: sudo apt-get install -y ${{ inputs.apt_packages }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Python install
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
      
      - name: Run pre-commit
        if: ${{ hashFiles('.pre-commit-config.yaml') != '' }}
        uses: pre-commit/action@v3.0.1
      
      - name: Install tox
        if: ${{ hashFiles('tox.ini') != '' }}
        run: |
          python -m pip install tox

      - name: Build
        run: |
          ${{ inputs.build_command }}

      - name: Convert handle to lowercase
        id: lowercase
        run: |
          echo "PROJECT=$(echo ${{ inputs.handle }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Upload
        if: inputs.upload && ( github.event_name == 'push' || github.event_name == 'workflow_dispatch' )
        uses: lsst-sqre/ltd-upload@v1
        with:
          project: ${{ env.PROJECT }}
          dir: "_build/html"
          username: ${{ secrets.ltd_username }}
          password: ${{ secrets.ltd_password }}
